<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css"
      rel="stylesheet"
      integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH"
      crossorigin="anonymous"
    />
    <script
      src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"
      integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz"
      crossorigin="anonymous"
    ></script>
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css"
      integrity="sha384-k6RqeWeci5ZR/Lv4MR0sA0FfDOMPj1B7F+IC2RC3ZrW/9f3JW5c5y00PYkN6Bf3"
      crossorigin="anonymous"
    />
    <link rel="stylesheet" href="/css/tanque_ejs.css" />
    <link rel="stylesheet" href="/css/dashboard_ejs.css" />
    <title>Sensores</title>
  </head>
  <style>
    /* Estilo geral para os itens da tabela (card) */
    .sensor-item {
        display: flex;
        align-items: center;
        padding: 10px;
        border-radius: 10px;
        background-color: #fff;
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
        margin: 10px 0;
        transition: transform 0.3s ease;
        position: relative;
    }

    .sensor-item:hover {
      transform: translateY(-5px);
    }

    .sensor-item .svg-left {
      position: absolute;
      left: 0;
      top: 0;
      bottom: 0;
      width: 15px;
      display: flex;
      align-items: center;
      justify-content: center;
    }

    .sensor-item .svg-left img {
      height: 115px;
      width: 20px;
      border-radius: 5px 0px 0px 5px;
    }

    .sensor-item img {
      width: 80px;
      height: 80px;
      border-radius: 5px;
      object-fit: cover;
      margin-right: 20px;
    }

    .sensor-item p {
      font-size: 14px;
      font-weight: 600;
      margin: 0;
    }

    .sensor-item .text-center {
      display: flex;
      flex-direction: column;
      align-items: flex-end;
      justify-content: flex-start;
      gap: 5px;
      width: 100%;
    }

    .botoes a {
      display: flex;
      align-items: center;
      justify-content: center;
      width: 50px;
      height: 50px;
      border-radius: 5px;
      text-decoration: none;
    }

    @media screen and (max-width: 768px) {
      .botoes {
        flex-wrap: wrap;
        gap: 10px;
      }
      #filter, #updown {
        width: 30px;
      }
    }
  </style>

  <body>
    <div class="p-5"></div>
    <div class="container">
      <% if (successMessage.length) { %>
        <div class="alert alert-success text-center">
            <%= successMessage[0] %>
        </div>
      <% } %>

      <div class="card-header" style="display: flex; justify-content: center; align-items: center; color: black;">
        <h2>Sistema</h2>
      </div>
      <div class="card-header mt-4" style="display: flex; justify-content: space-between; align-items: center;">
        <h1 class="h5" id="aaa">Componentes</h1>

        <div class="botoes" style="margin-left: 20px; display: flex; justify-content: flex-start; gap: 0px;">
          <a href="#" id="updown" class="btn">
            <img src="./imgs/pepicons-pop_down-up.svg" alt=""/>
          </a>
          <a href="/sensores/new" class="btn">
            <img src="./imgs/icon_add.svg" alt="Adicionar" />
          </a>
        </div>
      </div>

      <hr />
      <table class="table table-bordered">
        <tbody id="tanquesList">
            <% if (sensores.length === 0) { %>
                <tr>
                    <td colspan="2" class="text-center">Nenhum sensor cadastrado ainda.</td>
                </tr>
            <% } else { %>
                <% sensores.forEach(sensor => { %>
                  <tr class="sensor-item <%= sensor.id_sensor == highlight ? 'highlight' : '' %>">
                    <td style="position: relative; display: flex; align-items: center;">
                      <div class="svg-left">
                        <img src="./imgs/canto_colorido.svg" alt="">
                      </div>
                      <img src="/uploads/<%= sensor.foto_sensor %>" alt="Sensor Image" />
                      <div style="display: flex; flex-direction: column;">
                        <p style="color: #333; font-size: 14px; margin: 0;"><%= sensor.tipo_sensor.descricao %></p>
                        <p style="color: #333; font-size: 12px; margin: 0;"><%= sensor.apelido %></p>
                        <p style="color: #555; margin: 0;">#<%= sensor.id_sensor %></p>
                      </div>
                    </td>                    
                    <td class="text-center">
                      <a href="/sensores/edit/<%= sensor.id_sensor %>" class="editar">
                        <img src="./imgs/edit-pencil.svg" alt="" style="width: 30px; height: 30px;">
                      </a>
                      <a href="/sensores/delete/<%= sensor.id_sensor %>" class="excluir">
                        <img src="./imgs/pink-trash.svg" alt="" style="width: 30px; height: 30px;">
                      </a>
                    </td>
                  </tr>
                <% }) %>
            <% } %>
        </tbody>
      </table>
    </div>
    <%- include('partials/nav_bottom_sem') %>
    <script>
      // Variável de controle para a direção da ordenação
      let isAscending = true;
    
      // Adiciona evento de clique no botão para alternar a ordenação
      document.getElementById('updown').addEventListener('click', function () {
        const sensorItems = document.querySelectorAll('.sensor-item');
    
        // Mapeia os itens da tabela para um array de objetos com as informações necessárias
        const sensorArray = Array.from(sensorItems).map(item => {
          const id = parseInt(item.querySelector('p:nth-child(3)').textContent.replace('#', '').trim());
          const foto_sensor = item.querySelector('img[src*="/uploads"]').getAttribute('src'); // Busca a imagem do sensor
          const descricao = item.querySelector('p:nth-child(1)').textContent;
          const apelido = item.querySelector('p:nth-child(2)').textContent; // Adiciona o apelido
    
          // Log para depuração
          console.log('ID:', id, 'Descrição:', descricao, 'Apelido:', apelido, 'Imagem:', foto_sensor);
    
          return { id_sensor: id, foto_sensor: foto_sensor, descricao: descricao, apelido: apelido, element: item };
        });
    
        // Alterna a direção da ordenação
        isAscending = !isAscending;
    
        // Função de ordenação (mergeSort)
        function mergeSort(arr, ascending) {
          if (arr.length <= 1) return arr;
    
          const mid = Math.floor(arr.length / 2);
          const left = mergeSort(arr.slice(0, mid), ascending);
          const right = mergeSort(arr.slice(mid), ascending);
    
          return merge(left, right, ascending);
        }
    
        function merge(left, right, ascending) {
          let result = [], leftIndex = 0, rightIndex = 0;
    
          while (leftIndex < left.length && rightIndex < right.length) {
            const comparison = ascending
              ? left[leftIndex].id_sensor < right[rightIndex].id_sensor
              : left[leftIndex].id_sensor > right[rightIndex].id_sensor;
    
            if (comparison) {
              result.push(left[leftIndex]);
              leftIndex++;
            } else {
              result.push(right[rightIndex]);
              rightIndex++;
            }
          }
    
          return result.concat(left.slice(leftIndex), right.slice(rightIndex));
        }
    
        // Ordena os sensores com base na direção definida
        const sortedSensors = mergeSort(sensorArray, isAscending);
    
        // Limpa a tabela
        const tanquesList = document.getElementById('tanquesList');
        tanquesList.innerHTML = '';
    
        // Re-renderiza as linhas da tabela
        sortedSensors.forEach(sensor => {
          const row = document.createElement('tr');
          row.classList.add('sensor-item');
    
          row.innerHTML = `
            <td style="position: relative; display: flex; align-items: center;">
              <div class="svg-left">
                <img src="./imgs/canto_colorido.svg" alt="">
              </div>
              <img src="${sensor.foto_sensor}" alt="Sensor Image" style="width: 80px; height: 80px; border-radius: 5px; object-fit: cover;" />
              <div style="display: flex; flex-direction: column;">
                <p style="color: #333; font-size: 14px; margin: 0;">${sensor.descricao}</p>
                <p style="color: #333; font-size: 12px; margin: 0;">${sensor.apelido}</p> <!-- Adiciona apelido -->
                <p style="color: #555; margin: 0;">#${sensor.id_sensor}</p>
              </div>
            </td>
            <td class="text-center">
              <a href="/sensores/edit/${sensor.id_sensor}" class="editar">
                <img src="./imgs/edit-pencil.svg" alt="Editar" style="width: 30px; height: 30px;">
              </a>
              <a href="/sensores/delete/${sensor.id_sensor}" class="excluir">
                <img src="./imgs/pink-trash.svg" alt="Excluir" style="width: 30px; height: 30px;">
              </a>
            </td>
          `;
    
          tanquesList.appendChild(row);
        });
      });
    </script>
    
    
    
  </body>
</html>
